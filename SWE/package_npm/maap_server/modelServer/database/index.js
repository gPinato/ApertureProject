/** * File: index.js * Module: maap_server::modelServer::database * Author: Alberto Garbui * Created: 12/05/14 * Version: 0.1 * Description: inizializzazione database * Modification History: ============================================== * Version | Changes ============================================== * 0.1 File creation ============================================== */'use strict';var mongoose = require('mongoose');var userDBManager = require('./MongooseDBFramework');var dataDBManager = require('./MongooseDBAnalysis');var addAdminDefault = function(config, userDB){	var collection = config.userDB.usersCollection;	var usersModel = require('./MongooseDBFramework').users;	var dataRetriever = require('../dataManager/DatabaseUserManager/DataRetrieverUsers');	var emailDefault = 'admin@admin.com';	var passwordDefault = 'password';	var levelDefault = 1;	userDBManager.users.count({level:1}, function(err, usersCount){		if(err)		{			console.log('Errore controllo collection utenti: ' + err);		}else if(usersCount == 0){			dataRetriever.addUser(emailDefault, passwordDefault, levelDefault, function(done){				if(done)				{					console.log('default administrator login created:');					console.log('default email: ' + emailDefault)					console.log('default password: ' + passwordDefault);					console.log('for security reasons please change your credentials after the first login.');				}else{					console.log('maap got some errors while setting up the default administrator login data :(');				}			});		}else{			if(config.app.env == 'development')				console.log('usersDB: found ' + usersCount + ' admin users! no need to add a default one');		}	});}var initDB = function(app) {	var config = app.config;		console.log('databases init... ');		var userDB2connect = config.userDB.host + ':' + config.userDB.port + "/" + config.userDB.db_name;	if(config.userDB.username != '' && config.userDB.password != '')	{		userDB2connect = config.userDB.username + ':' + config.userDB.password + '@' + userDB2connect;	}	userDB2connect = 'mongodb://' + userDB2connect;		console.log('connecting to user db: ' + userDB2connect + ' ...');	var userDBisReady = false;		//createConnection usato per creare connessioni multiple a diversi db	var userDB = mongoose.createConnection(userDB2connect);		app.db = {};	app.db.users = userDB;		userDB.on('error', console.error.bind(console, 'connection failed! check your users\'s mongodb path!\n'));	userDB.once('open', function callback() {		console.log('successfully connected to user\'s database!');		userDBManager.init(app);		addAdminDefault(config, userDB);			userDBisReady = true;	});		while(!userDBisReady){require('deasync').sleep(100);}		var analysisDB2connect = config.dataDB.host + ':' + config.dataDB.port + "/" + config.dataDB.db_name;	if(config.dataDB.username != '' && config.dataDB.password != '')	{		analysisDB2connect = config.dataDB.username + ':' + config.dataDB.password + '@' + analysisDB2connect;	}	analysisDB2connect = 'mongodb://' + analysisDB2connect;		console.log('connecting to data db: ' + analysisDB2connect + ' ...');	var dataDBisReady = false;		var dataDB = mongoose.createConnection(analysisDB2connect);		app.db.data = dataDB;		dataDB.on('error', console.error.bind(console, 'connection failed! check your data\'s mongodb path!\n'));	dataDB.once('open', function callback() {		console.log('successfully connected to data\'s database!');			dataDBManager.init(app);		dataDBisReady = true;	});		while(!dataDBisReady){require('deasync').sleep(100);}	}exports.init = initDB;