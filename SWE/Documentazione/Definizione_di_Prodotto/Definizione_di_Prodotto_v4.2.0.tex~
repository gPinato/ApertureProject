
%includo il file che contiene la versione dei documenti
\input{../Logo&Header/versioneDocumenti.tex}

\newcommand{\Versione}{\versioneDefinizioneDiProdotto{}} %Versione Finale
\newcommand{\Data}{2014-04-04}				           	 %Data di creazione
\newcommand{\DataUltimaModifica}{2014-03-24}
\newcommand{\TipoDocumento}{Definizione di Prodotto}	 %tipo documento

%includo il file header.tex (logo grande in prima pagina piu qualche altra regola)
\input{../Logo&Header/header.tex}
%\vspace{.05in}

%informazioni documento
\begin{center}
%\section{Informazioni documento}
\begin{tabular}{r|l}
%\textbf{Nome} &\TipoDocumento \\
\textbf{Versione} & \Versione{} \\
\textbf{Data creazione} & \Data{} \\
\textbf{Data ultima modifica} & \DataUltimaModifica{} \\
\textbf{Stato del Documento} & Formale \\		          %CAMBIARE QUI
\textbf{Uso del Documento} & Esterno \\			          %CAMBIARE QUI
\textbf{Redazione} &  Pinato Giacomo, Mattia Sorgato\\	  %CAMBIARE QUI
& Michele Maso, Fabio Miotto\\
& Alessandro Benetti, Andrea Perin\\
\textbf{Verifica} & Alberto Garbui, Alessandro Benetti\\  %ED ANCHE QUI!
\textbf{Approvazione} & Michele Maso\\				      %CAMBIARE QUI
\textbf{Distribuzione} & \parbox[t]{4cm}{\NomeGruppo{}\\Prof. Vardanega Tullio\\Prof. Cardin Riccardo\\ \Prop{} }\\
\end{tabular}
\end{center}

\vspace{0.05in}

%inizio sommario del documento
\begin{abstract}
\begin{center}
Architettura di dettaglio dell'applicazione \Progetto{}.
\end{center}
\end{abstract}

%\vspace{.4in}

%seconda pagina, diario delle modifiche
\newpage
Diario delle modifiche
\begin{center}
\begin{longtable}{|c|c|c|p{0.5\linewidth}|}
\toprule
\textbf{Versione} & \textbf{Data} & \textbf{Autore} & \textbf{Modifiche effettuate}\\

%aggiungere qui una midrule per aggiungere una nuova riga alla tabella
\midrule
4.2.0 & 2014-05-24 & Michele Maso (RE) & Approvazione documento.\\
\midrule
4.1.1 & 2014-05-22 & Alessandro Benetti (VR) & Verifica documento.\\
\midrule
4.1.0 & 2014-05-20 & Alberto Garbui (VR) & Verifica documento.\\


\midrule
4.0.1 & 2014-04-04 & Alberto Garbui (PR) & Prima stesura del documento.\\

\bottomrule
\caption{Registro delle modifiche}
\label{tab:changelog}

\end{longtable}
\end{center}

%terza pagina Indice (viene aggiornato in automatico con due compilazioni)
\newpage
\tableofcontents

%pagine successive hanno la lista di tabelle e lista delle figure
%(vengono aggiornate in automatico)
\newpage
%\listoftables	%tabelle
\listoffigures %elenco delle immagini

%qui inizia la prima pagina ufficiale
\newpage
\section{Introduzione}
\subsection{Scopo del documento}
Il seguente documento ha lo scopo di definire nel dettaglio la struttura del sistema \gloss{MaaP}, approfondendo quanto già riportato nella Specifica Tecnica. Tale documento fornisce una struttura dettagliata e completa che viene utilizzata dai \emph{Programmatori} per le attività di codifica.

\subsection{Scopo del prodotto}
\Prodotto{}

\subsection{Glossario}
\Glossario{}

\subsection{Riferimenti}

\subsubsection{Normativi}
\begin{itemize}
\item \grassetto{Analisi dei requisiti}: \emph{Analisi\_{}dei\_{}Requisiti\_{}v\versioneAnalisiDeiRequisiti{}.pdf};
\item \grassetto{Norme di Progetto}: \emph{Norme\_{}di\_{}Progetto\_{}v\versioneNormeDiProgetto{}.pdf};
\item \grassetto{Specifica Tecnica}: \emph{Specifica\_{}Tecnica\_{}v\versioneNormeDiProgetto{}.pdf};
\end{itemize}

\subsubsection{Informativi}
\begin{itemize}
\item \grassetto{AngularJS API}: \url{https://docs.angularjs.org/api};
\end{itemize}

\newpage
\section{Standard di progetto}
\subsection{Standard di progettazione architetturale}
Gli standard di progettazione architetturale sono definiti nella \emph{Specifica\_{}Tecnica\_{}v\versioneSpecificaTecnica{}.pdf}.

\subsection{Standard di documentazione del codice}
Gli standard di documentazione del codice sono specificati nel documento di 
\emph{Norme\_{}di\_{}Progetto\_{}v\versioneNormeDiProgetto{}.pdf}, nella sezione XXXXXX.	%Cambia qui, altrimenti, bad juju at you.

\subsection{Standard di denominazione di entit\'{a} e relazioni}

\subsection{Standard di programmazione}
Gli standard di programmazione sono specificati nel documento di 
\emph{Norme\_{}di\_{}Progetto\_{}v\versioneNormeDiProgetto{}.pdf}, nella sezione XXXXXX.	%Cambia anche qui, con la sezione giusta.

\subsection{Strumenti di lavoro}
Gli strumenti di lavoro sono trattati nella sezione XXXXX del documento di					%idem con patate.
Gli standard di documentazione del codice e le norme da applicare nelle attivita\'{a} 
di Codifica sono specificati nel documento di 
\emph{Norme\_{}di\_{}Progetto\_{}v\versioneNormeDiProgetto{}.pdf}.

\newpage
\section{Specifica componenti}

\subsection{MaaP}
%qui ci va la figura della vista generale dei package
Namespace generale del progetto. In accordo con il design pattern architetturale Client-Server che 
abbiamo adottato, le interazioni che il Client ha con il Server sono di tipo REST-like.

\subsection{Maap::Server}
Package Server del Design Pattern Client-Server. 

\subsection{Maap::Server::Controller}
Package che gestisce il dialogo con il Client di Maap. 
%metodi e blabla del Controller

\subsection{Maap::Server::ModelServer}
Package che racchiude i database, le loro operazioni di accesso e i file 
DSL con i relativi interpreti.

\subsection{Maap::Server::ModelServer::Database}
%mmmm boh, qui c'e' il database Mongo e Mongoose?

\subsection{Maap::Server::ModelServer::DataManager}
Package che gestisce gli accessi ai database.

\subsubsection{Maap::Server::ModelServer::DataManager::DatabaseAnalysisManager}
Package che gestisce le query ai database di analisi. 

\paragraph{Maap::Server::ModelServer::DataManager::DatabaseAnalysisManager::DatabaseAnalysisManager}

\subparagraph{Descrizione}

\subparagraph{Dipendendenze entranti}
%da definire

\subparagraph{Dipendenze uscenti}
\begin{itemize}
\item{path}
\item{DataRetrieverAnalysis}
\item{IndexManager}
\item{JSonComposer}
\end{itemize}

\subparagraph{Attributi}
%da definire

\subparagraph{Metodi}
\begin{itemize}
\item{sendCollectionList:} invia al al client la lista delle varie Collection 
definite dai DSL; 
\item{sendCollection}
\item{sendDocument}
\item{sendDocumentEdit}
\item{updateDocument}
\item{removeDocument}
\end{itemize}

\paragraph{Maap::Server::ModelServer::DataManager::DatabaseAnalysisManager::DatabaseRetrieverAnalysis}

\subsubsection{Maap::Server::ModelServer::DataManager::DatabaseUserManager}

\subsubsection{Maap::Server::ModelServer::DataManager::IndexManager}

\subsection{Maap::Server::ModelServer::DSL}

\subsection{Maap::Client}

\subsection{Maap::Client::View}

\subsubsection{Maap::Client::View::Template}
%qui ci va la trattazione dei vari template html di AngularJS

\subsection{Maap::Client::ControllerModelView}

\subsubsection{Maap::Client::ControllerModelView::ControllerClient}

\subsubsection{Maap::Client::ControllerModelView::Scope}

\subsubsection{Maap::Client::ControllerModelView::Directives}

\subsection{Maap::Client::ModelClient}

\subsubsection{Maap::Client::ModelClient::Model}
%il Model nel Client c'e' ancora? perche' a quanto pare non serve nemmeno.

\subsubsection{Maap::Client::ModelClient::Services}

\paragraph{CollectionDataService}
\subparagraph{Descrizione}
Modulo che espone un oggetto \$resource legato ad una particolare Collection. 

\subparagraph{Utilizzo}
Viene utilizzato come astrazione della risorsa Collection, su cui il CollectionController invocherà delle richieste 
RESTful aggiungendo i parametri necessari. La risorsa fornita conterr\'{a} i Document ad essa correlati e quest'ultimi 
verranno visualizzati in base alle opzioni della richiesta RESTful.

\subparagraph{Funzionalità esportate}
%qui ci andrebbe tipo uno screenshot del codice, devo ancora capire come esporre le informazioni del sorgente
\emph{Dipendenze iniettate:}
\begin{itemize}
 \item \$resource.
\end{itemize}
L'istruzione di ritorno crea una nuova \$resource che modella il comportamento della Collection 
che verrà individuata tramite l'attributo \emph{col_id}.


\paragraph{CollectionListService}
\subparagraph{Descrizione}
Modulo che espone un oggetto \$resource legato alla lista delle Collection disponibili. 

\subparagraph{Utilizzo}
Viene creata una \$resource che modella ad alto livello la lista delle Collection disponibili,
per essere utilizzata nel DashboardController.

\subparagraph{Funzionalità esportate}
\emph{Dipendenze iniettate:}
\begin{itemize}
 \item \$resource.
\end{itemize}
L'istruzione di ritorno crea una \$resource che contiene la lista delle Collection disponibili, con 
cui interagire tramite richieste RESTful.

\paragraph{DocumentDataService}
\subparagraph{Descrizione}
Modulo che espone un oggetto \$resource legato ad un particolare Document.

\subparagraph{Utilizzo}
Questo servizio ritorna un oggetto \$resource legato ad un particolare Document, che verrà
utilizzato dal DocumentController tramite richieste RESTful per visualizzarne gli attributi.

\subparagraph{Funzionalità esportate}
\begin{itemize}
 \item \$resource.
\end{itemize}
L'oggetto ritornato da questa Factory lega la \$resource ritornata al Document \emph{doc_id} della Collection
\emph{col_id}. Inoltre, stabilisce che le richieste \emph{query} vengano effettuate tramite metodo GET. 

\paragraph{DocumentEditservice}
\subparagraph{Descrizione}
Modulo che espone un oggetto \$resource legato ad un particolare Document modificabile.

\subparagraph{Utilizzo}
Questo servizio ritorna un oggetto \$resource legato ad un particolare Document, che verrà
utilizzato dal DocumentEditController tramite richieste RESTful, sia per visualizzarne
le informazioni, sia per modificarne le proprietà.

\subparagraph{Funzionalità esportate}
\begin{itemize}
 \item \$resource.
\end{itemize}
L'oggetto ritornato da questa Factory lega la \$resource ritornata al Document \emph{doc_id} della Collection
\emph{col_id}. Inoltre, oltre alla visualizzazione, descrive che le richieste di \emph{update} vengono effettuate
con richieste di \emph{PUT}, mentre le richieste di \emph{remove} useranno il metodo http \emph{DELETE}.


\newpage
\section{Diagrammi di sequenza}


\appendix


%tracciamento in appendice? dont panic
\newpage


\section{Tracciamento}






%FINE DOCUMENTO NON CANCELLARE
\end{document}
