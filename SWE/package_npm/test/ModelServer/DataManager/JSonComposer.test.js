/** * File: JSonComposer.test.js * Module: test::ModelServer::DataManager * Author: Michele Maso  * Created: 20/06/14 * Version: 1.0 * Description: test del JSonComposer  * Modification History: ============================================== * Version | Changes ============================================== * 1.0 File creation ============================================== */var createCollectionsList = require("../../../maap_server/modelServer/dataManager/JSonComposer.js").createCollectionsList;var chai = require('chai');var should = chai.should();var assert = chai.assert;var expect = chai.expect;var collection = new Array();collection.push({label:'a', name:'aa', position:1});collection.push({label:'b', name:'bb', position:2});collection.push({label:'c',name:'cc', position:3});var collectionReturn = createCollectionsList(collection);var collectionJSON = JSON.parse(collectionReturn);describe("Test createCollectionList:", function() {    it("collection deve avere il campo labels", function() {		expect(collectionJSON).to.have.property('labels');    }),	it("collection deve avere il campo data", function() {		expect(collectionJSON).to.have.property('data');	}),		it("collection deve avere positions", function() {		expect(collectionJSON).to.have.property('positions');	});		it("valore 0 del campo labels errato", function() {		expect(collectionJSON.labels[0]).to.equal(collection[0].label);	});		it("valore 1 del campo labes sbagliato", function() {		expect(collectionJSON.labels[1]).to.equal(collection[1].label);	});		it("valore 2 del campo labels sbagliato", function() {		expect(collectionJSON.labels[2]).to.equal(collection[2].label);	});		it("valore 0 del campo name errato", function() {		expect(collectionJSON.data[0]).to.equal(collection[0].name);	});		it("valore 1 del campo name sbagliato", function() {		expect(collectionJSON.data[1]).to.equal(collection[1].name);	});		it("valore 2 del campo name sbagliato", function() {		expect(collectionJSON.data[2]).to.equal(collection[2].name);	});		it("valore 0 del campo positionserrato", function() {		expect(collectionJSON.positions[0]).to.equal(collection[0].position);	});		it("valore 1 del campo positions sbagliato", function() {		expect(collectionJSON.positions[1]).to.equal(collection[1].position);	});		it("valore 2 del campo positions sbagliato", function() {		expect(collectionJSON.positions[2]).to.equal(collection[2].position);	});	});/*describe("Test createCollectionList:", function() {}*/