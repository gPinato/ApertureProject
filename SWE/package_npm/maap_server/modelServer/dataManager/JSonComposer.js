/** * File: JSonComposer.js * Module: maap_server::modelServer::dataManager * Author: Alberto Garbui * Created: 04/05/14 * Version: 0.1 * Description: JSON composer... * Modification History: ============================================== * Version | Changes ============================================== * 0.1 File creation ============================================== */'use strict';exports.createCollectionsList = function(collectionsList) {	var collectionsLabels = [];	var collectionsNames = [];	var collectionsPositions = [];	for(var i=0; i<collectionsList.length; i++)	{		collectionsLabels.push(collectionsList[i].label);		collectionsNames.push(collectionsList[i].name); 		collectionsPositions.push(collectionsList[i].position);	}		//carico la lista di collections su data		var json =  {};	json.labels = collectionsLabels;	json.data = collectionsNames;	json.positions = collectionsPositions;			var jsonString = JSON.stringify(json);		return jsonString;}var checkLabels = function(labelsArray) {	for(var i=0; i<labelsArray.length; i++)	{		if(labelsArray[i].indexOf('__IDLABEL2SHOW__') == 0 || labelsArray[i] == '_id')			return true;	}	return false;}exports.checkLabels=checkLabels;exports.createCollection = function(labels,data,config) {	var dataArray = [];	var idLabelIsPresent = checkLabels(labels);		for(var i=0; i<data.length; i++) {		var obj = data[i];		var dataBlock = {}						//creo un blocco dati		dataBlock._id = obj._id;				//ID del document, sempre presente		dataBlock.data = {};				for(var attributename in obj){		console.log(attributename + ': ' + obj[attributename]);			if(attributename != '_id' )			{				dataBlock.data[attributename] = obj[attributename]; //carico l'attributo			}else{				if(idLabelIsPresent)				{					for(var j=0; j<labels.length; j++)					{						//pulisco l'etichetta						if(labels[j].indexOf('__IDLABEL2SHOW__') == 0)							labels[j] = labels[j].substr(16);					}					dataBlock.data[attributename] = obj[attributename];				}			}		}			console.log(dataBlock);			dataArray.push(dataBlock);	}		//creo il json principale: un array di labels, data e config	var json = [];	json.push(labels);	json.push(dataArray);	json.push(config);		console.log('JSONcomposerCOL:');	console.log(json);		var jsonString = JSON.stringify(json);	return jsonString;};exports.createDocument = function(labels,data) {	//creo il json principale: un array di labels, e data 	var json = {};	json.label = labels;	json.data = {};		var idLabelIsPresent = checkLabels(labels);			for(var attributename in data)	{		if(attributename != '_id' )		{			json.data[attributename] = data[attributename]; //carico l'attributo		}else{			if(idLabelIsPresent)			{				for(var j=0; j<labels.length; j++)				{					//pulisco l'etichetta					if(labels[j].indexOf('__IDLABEL2SHOW__') == 0)						labels[j] = labels[j].substr(16);				}				json.data[attributename] = data[attributename];			}		}	}		console.log('JSONcomposerDOC:');	console.log(json);		var jsonString = JSON.stringify(json);	return jsonString;};exports.createQueriesList = function(queries, config){	//creo il json principale: un array di labels, e data 	var labels = [];	var data = [];		//carico le etichette	labels.push('Collection Name');	labels.push('Selected fields');		labels.push('Score');			for(var i=0; i<queries.length; i++)	{		var dataBlock = {};		dataBlock._id = queries[i]._id;		var selectedFields = '';		var select = queries[i].select;		for(var key in select)		{			selectedFields += key + ', ';		}		dataBlock.data = {name: queries[i].collection_name, fields: selectedFields, score: queries[i].counter};		data.push(dataBlock);		console.log(JSON.stringify(queries[i]));	}					var json = [];	json.push(labels);	json.push(data);	json.push(config);		console.log('JSONcomposerQUERIES:');	console.log(json);		var jsonString = JSON.stringify(json);	return jsonString;};exports.createIndexesList = function(indexes, config){	//creo il json principale: un array di labels, e data 	var labels = [];	var data = [];		//carico le etichette	labels.push('Index name');	labels.push('Collection');	labels.push('Selected fields');			for(var i=0; i<indexes.length; i++)	{		var dataBlock = {};		dataBlock._id = indexes[i].indexName;				dataBlock.data = {};		dataBlock.data.name = indexes[i].indexName;		dataBlock.data.collection = indexes[i].collectionName;		dataBlock.data.fields = '';		var fields = indexes[i].indexFields;				for(var j=0; j<fields.length; j++)		{			dataBlock.data.fields += fields[j][0] + ', ';		}						//console.log(JSON.stringify(indexes[i]));		data.push(dataBlock);			}			console.log('JSONcomposerINDEXES:');		var json = [];	json.push(labels);	json.push(data);	json.push(config);		console.log(json);		var jsonString = JSON.stringify(json);	return jsonString;};exports.createUserProfile = function(user){	//creo il json principale: un array di labels, e data 	var json = {};	json.label = [];	json.data = {};		//carico le etichette	json.label.push('Email');	json.label.push('Level');	json.data['email'] = user.email;		if(user.level == 0)	{		json.data['level'] = 'user';	}else{		json.data['level'] = 'administrator';	}			console.log('JSONcomposerUserProfile:');	console.log(json);		var jsonString = JSON.stringify(json);	return jsonString;};exports.createUserProfileEdit = function(user){	//creo il json principale: un array di labels, e data 	var json = {};	json.label = [];	json.data = {};		//carico le etichette e la mail	json.label.push('Email');	json.data['email'] = user.email;				console.log('JSONcomposerUserProfileEdit:');	console.log(json);		var jsonString = JSON.stringify(json);	return jsonString;};exports.createUsersList = function(users, config){	//creo il json principale: un array di labels, e data 	var labels = [];	var data = [];			//carico le etichette	labels.push('ID');	labels.push('Email');	labels.push('Level');			for(var i=0; i<users.length; i++)	{		var dataBlock = {};		dataBlock._id = users[i]._id;		dataBlock.data = {};		dataBlock.data._id = users[i]._id;		dataBlock.data.email = users[i].email;		if(users[i].level == 0)		{			dataBlock.data.level = 'user';		}else{			dataBlock.data.level = 'administrator';		}		console.log(dataBlock);		data.push(dataBlock);	}			var json = [];	json.push(labels);	json.push(data);	json.push(config);		console.log('JSONcomposerUSERLIST:');	console.log(json);		var jsonString = JSON.stringify(json);	return jsonString;};//per l'adminexports.createUser = function(user){	//creo il json principale: un array di labels, e data 	var json = {};	json.label = [];	json.data = {};		//carico le etichette	json.label.push('ID');	json.label.push('Email');	json.label.push('Level');	json.data.id = user._id;	json.data.email = user.email;		if(user.level == 0)	{		json.data.level = 'user';	}else{		json.data.level = 'administrator';	}		console.log('JSONcomposerUserForAdmins:');	console.log(json);		var jsonString = JSON.stringify(json);	return jsonString;};