//aggiungere intestazionevar passport = require("passport");var LocalStrategy = require('passport-local').Strategy;var DB = require('../modelServer/database/MongooseDBFramework');var initPassport = function(app) {	console.log("passport init...");	app.use(passport.initialize());	app.use(passport.session());			passport.use(new LocalStrategy(function(username, password, done){		DB.users.findOne({ username : username},function(err,user){			if(err) { return done(err); }			if(!user){				return done(null, false, { message: 'Incorrect username.' });			}			hash( password, user.salt, function (err, hash) {				if (err) { return done(err); }				if (hash == user.hash) return done(null, user);				done(null, false, { message: 'Incorrect password.' });			});		});	}));		passport.serializeUser(function(user, done) {		done(null, user.id);	});	passport.deserializeUser(function(id, done) {		DB.users.findById(id,function(err,user){			if(err) done(err);			if(user){				done(null,user);			}else{				DB.users.findById(id, function(err,user){					if(err) done(err);					done(null,user);				});			}		});	});	};exports.checkAuthenticated = function(req, res, next){    if(req.isAuthenticated()){        next();    }else{        res.redirect("/login");    }}exports.userExist = function(req, res, next) {    Users.count({        username: req.body.username    }, function (err, count) {        if (count === 0) {            next();        } else {            // req.session.error = "User Exist"            res.redirect("/singup");        }    });}exports.init = initPassport;