/** * File: passport.js * Module: maap_server::controller * Author: Alberto Garbui * Created: 03/05/14 * Version: 0.1 * Description: inizializzazione e gestione passport * Modification History: ============================================== * Version | Changes ============================================== * 0.1 File creation ============================================== */ 'use strict';var passport = require("passport");var LocalStrategy = require('passport-local').Strategy;var DB = require('../modelServer/database/MongooseDBFramework');var initPassport = function(app) {	console.log("passport init...");	app.use(passport.initialize());	app.use(passport.session());			/*passport.use(new LocalStrategy(function(username, password, done){		DB.users.findOne({ username : username},function(err,user){			if(err) { return done(err); }			if(!user){				return done(null, false, { message: 'Incorrect username.' });			}			hash( password, user.salt, function (err, hash) {				if (err) { return done(err); }				if (hash == user.hash) return done(null, user);				done(null, false, { message: 'Incorrect password.' });			});		});	}));*/		passport.use(new LocalStrategy({		usernameField: 'email'	},		function(email, password, done) {			if (email.valueOf() === 'apertureswe@gmail.com' &&				password.valueOf() === 'asdasd')				return done(null, true);			else				return done(null, false);		}	));		passport.serializeUser(function(user, done) {		done(null, user);	});	passport.deserializeUser(function(user, done) {		done(null, user);	});	/*passport.deserializeUser(function(id, done) {		DB.users.findById(id,function(err,user){			if(err) done(err);			if(user){				done(null,user);			}else{				DB.users.findById(id, function(err,user){					if(err) done(err);					done(null,user);				});			}		});	});*/	};var checkAuthenticated = function(req, res, next){    if (!req.isAuthenticated()) res.send(401);    else next();}exports.userExist = function(req, res, next) {    Users.count({        username: req.body.username    }, function (err, count) {        if (count === 0) {            return next();        } else {            // req.session.error = "User Exist"            res.redirect("/singup");        }    });}/*exports.authenticate = function(req,res,next){	passport.authenticate('local',		function(req, res, next){			return next();	});};*/exports.init = initPassport;exports.passport = passport;exports.checkAuthenticated = checkAuthenticated;